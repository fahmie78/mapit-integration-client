plugins {
    id 'java'
    id 'application'
    id 'idea'
    id 'com.google.protobuf' version '0.8.13'
}

group 'my.com.prasarana.rapidbus'
version '1.0'

def mainClass = 'my.com.prasarana.rapidbus.mapitintegration.server.MainMapitIntegration'

sourceCompatibility = 1.8
targetCompatibility = sourceCompatibility

repositories {
    mavenCentral()
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.12.0"
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.33.0'
        }
    }
    generateProtoTasks {
        all()*.plugins {
            grpc {}
        }
    }
}

dependencies {
    compile group: 'org.slf4j', name: 'slf4j-log4j12', version: '1.7.30'
    compile group: 'org.apache.kafka', name: 'kafka-clients', version: '2.6.0'
    compile group: 'com.google.protobuf', name: 'protobuf-java-util', version: '3.12.0'
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.11.3'
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    compile 'org.mongodb:mongodb-driver-sync:4.1.1'

    implementation 'io.grpc:grpc-netty-shaded:1.33.0'
    implementation 'io.grpc:grpc-protobuf:1.33.0'
    implementation 'io.grpc:grpc-stub:1.33.0'
    implementation 'io.grpc:grpc-services:1.33.0'
//    compileOnly 'org.apache.tomcat:annotations-api:6.0.53'

    testCompile group: 'junit', name: 'junit', version: '4.12'
}

application {
    mainClassName = mainClass
}

manifest {
    attributes 'Main-Class': mainClass
}

// if you have source imports issues, add the below
sourceSets.main.java.srcDir new File(buildDir, 'generated/source')
idea {
    module {
        // Marks the already(!) added srcDir as "generated"
        generatedSourceDirs += file('build/generated/source')
    }
}

task fatJar(type: Jar) {
    manifest {
        attributes 'Main-Class': mainClass
    }
    archiveClassifier = "all"
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    with jar
}